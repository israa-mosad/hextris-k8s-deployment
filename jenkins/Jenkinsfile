podTemplate(
  label: 'ci-agent',
  containers: [
    containerTemplate(name: 'jnlp', image: 'jenkins/inbound-agent:3327.v868139a_d00e0-5', args: '${computer.jnlpmac} ${computer.name}'),
    containerTemplate(name: 'kaniko', image: 'gcr.io/kaniko-project/executor:latest', ttyEnabled: true)
  ],
  volumes: [ emptyDirVolume(mountPath: '/kaniko/.docker', memory: false) ]
) {
  node('ci-agent') {
    def registry = 'docker.io/israa2000'
    def imageName = 'hextris'
    def tag = 'latest'

    stage('Checkout') {
      checkout scm
    }

    stage('Build & Push Docker Image') {
    container('kaniko') {
        withCredentials([string(credentialsId: 'DOCKER_CONFIG_JSON', variable: 'DOCKER_CONFIG_JSON')]) {
            sh """
              mkdir -p /kaniko/.docker
              echo "\$DOCKER_CONFIG_JSON" > /kaniko/.docker/config.json
              /kaniko/executor \\
                --dockerfile=$WORKSPACE/Dockerfile \\
                --context=dir://$WORKSPACE \\
                --destination=docker.io/israa2000/hextris:latest \\
                --cache=true
            """
        }
    }
}

    stage('Deploy via Terraform') {
      sh """
        cd infra/terraform
        terraform init
        terraform apply -auto-approve
      """
    }
  }
}
