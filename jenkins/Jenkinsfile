pipeline {
    agent {
        kubernetes {
            label 'kaniko-agent'
            defaultContainer 'jnlp'
            yaml """
apiVersion: v1
kind: Pod
metadata:
  labels:
    some-label: kaniko-agent
spec:
  containers:
  - name: kaniko
    image: gcr.io/kaniko-project/executor:latest
    tty: true
    volumeMounts:
      - name: kaniko-secret
        mountPath: /kaniko/.docker
  volumes:
  - name: kaniko-secret
    secret:
      secretName: docker-config-json
"""
        }
    }

    environment {
        IMAGE_NAME = "docker.io/israa2000/hextris:latest"
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Build & Push Docker Image') {
            steps {
                container('kaniko') {
                    withCredentials([string(credentialsId: 'DOCKER_CONFIG_JSON', variable: 'DOCKER_CONFIG_JSON')]) {
                        sh """
                          mkdir -p /kaniko/.docker
                          echo "\$DOCKER_CONFIG_JSON" > /kaniko/.docker/config.json
                          /kaniko/executor \\
                            --dockerfile=$WORKSPACE/Dockerfile \\
                            --context=dir://$WORKSPACE \\
                            --destination=${IMAGE_NAME} \\
                            --cache=true
                        """
                    }
                }
            }
        }

        stage('Deploy to Kubernetes') {
            steps {
                sh """
                  terraform init
                  terraform apply -auto-approve
                """
            }
        }
    }
}
